<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\A7139_touchuan.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\A7139_touchuan.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Fri Nov 13 16:15:33 2015
<BR><P>
<H3>Maximum Stack Usage =        164 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
EXTI0_1_IRQHandler &rArr; a7139_recv_handle &rArr; A7139_GetRSSI &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[22]">CEC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[10]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[11]">DMA1_Channel4_5_IRQHandler</a> from stm32f0xx_it.o(i.DMA1_Channel4_5_IRQHandler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from stm32f0xx_it.o(i.EXTI0_1_IRQHandler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f0xx_it.o(i.HardFault_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1c]">I2C1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1d]">I2C2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f0xx_it.o(i.NMI_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32f0xx_it.o(i.PendSV_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1f]">SPI2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32f0xx_it.o(i.SVC_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32f0xx_it.o(i.SysTick_Handler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[24]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f0xx.o(.text)
 <LI><a href="#[18]">TIM14_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[19]">TIM15_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1a]">TIM16_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[1b]">TIM17_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[13]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[14]">TIM1_CC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[15]">TIM2_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[16]">TIM3_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[17]">TIM6_DAC_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[e]">TS_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[20]">USART1_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[21]">USART2_IRQHandler</a> from bsp_usart2.o(i.USART2_IRQHandler) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f0xx.o(.text) referenced from startup_stm32f0xx.o(RESET)
 <LI><a href="#[25]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f0xx.o(.text)
 <LI><a href="#[23]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[26]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[80]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[81]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[82]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[83]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[84]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_data_into_buffer
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_into_buffer
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_rf_cmd_to_master
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[27]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[8b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>A7139_Cal</STRONG> (Thumb, 280 bytes, Stack size 40 bytes, a7139.o(i.A7139_Cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = A7139_Cal &rArr; A7139_ReadPageA &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Err_State
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteReg
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WritePageA
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadReg
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadPageA
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
</UL>

<P><STRONG><a name="[32]"></a>A7139_Config</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, a7139.o(i.A7139_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = A7139_Config &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Err_State
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteReg
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WritePageB
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WritePageA
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
</UL>

<P><STRONG><a name="[34]"></a>A7139_Exti_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, a7139.o(i.A7139_Exti_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = A7139_Exti_Init &rArr; SYSCFG_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
</UL>

<P><STRONG><a name="[3a]"></a>A7139_GetRSSI</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, a7139_api.o(i.A7139_GetRSSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = A7139_GetRSSI &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_RX_Exti
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
</UL>

<P><STRONG><a name="[3c]"></a>A7139_IO_ReSetBit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, a7139.o(i.A7139_IO_ReSetBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = A7139_IO_ReSetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_fillFifo
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCMD
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteRead
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteReg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteID
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadReg
</UL>

<P><STRONG><a name="[3e]"></a>A7139_IO_Read_Bit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, a7139.o(i.A7139_IO_Read_Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = A7139_IO_Read_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO2_wait
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteRead
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadReg
</UL>

<P><STRONG><a name="[40]"></a>A7139_IO_SetBit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, a7139.o(i.A7139_IO_SetBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = A7139_IO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_fillFifo
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCMD
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteRead
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteReg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteID
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadReg
</UL>

<P><STRONG><a name="[3b]"></a>A7139_RX_Exti</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, a7139.o(i.A7139_RX_Exti))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = A7139_RX_Exti
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_SetChn
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Send_Msg
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_GetRSSI
</UL>

<P><STRONG><a name="[30]"></a>A7139_ReadPageA</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, a7139.o(i.A7139_ReadPageA))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = A7139_ReadPageA &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteReg
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Cal
</UL>

<P><STRONG><a name="[2e]"></a>A7139_ReadReg</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, a7139.o(i.A7139_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDIO_Output
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_Read_Bit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_SetChn
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_GetRSSI
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadPageA
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Config
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Cal
</UL>

<P><STRONG><a name="[43]"></a>A7139_Send_Msg</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, a7139_api.o(i.A7139_Send_Msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = A7139_Send_Msg &rArr; A7139_fillFifo &rArr; StrobeCMD &rArr; A7139_IO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_RX_Exti
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO2_wait
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_fillFifo
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>A7139_SetChn</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, a7139_api.o(i.A7139_SetChn))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = A7139_SetChn &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_RX_Exti
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO2_wait
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCMD
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteReg
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model_Config
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>A7139_WriteID</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, a7139.o(i.A7139_WriteID))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = A7139_WriteID &rArr; ByteRead &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Err_State
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteRead
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
</UL>

<P><STRONG><a name="[31]"></a>A7139_WritePageA</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, a7139.o(i.A7139_WritePageA))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = A7139_WritePageA &rArr; A7139_WriteReg &rArr; A7139_IO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Config
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Cal
</UL>

<P><STRONG><a name="[33]"></a>A7139_WritePageB</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, a7139.o(i.A7139_WritePageB))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = A7139_WritePageB &rArr; A7139_WriteReg &rArr; A7139_IO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Config
</UL>

<P><STRONG><a name="[2d]"></a>A7139_WriteReg</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, a7139.o(i.A7139_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = A7139_WriteReg &rArr; A7139_IO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_SetChn
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WritePageB
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WritePageA
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadPageA
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Config
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Cal
</UL>

<P><STRONG><a name="[4a]"></a>ByteRead</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, a7139.o(i.ByteRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ByteRead &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDIO_Output
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_Read_Bit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteID
</UL>

<P><STRONG><a name="[49]"></a>ByteSend</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, a7139.o(i.ByteSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ByteSend &rArr; A7139_IO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_fillFifo
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteID
</UL>

<P><STRONG><a name="[11]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.DMA1_Channel4_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Channel4_5_IRQHandler &rArr; handler_data &rArr; data_into_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_data
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Init
</UL>

<P><STRONG><a name="[71]"></a>DMA_DeInit</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, stm32f0xx_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Init
</UL>

<P><STRONG><a name="[4b]"></a>DMA_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_dma.o(i.DMA_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[73]"></a>DMA_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Init
</UL>

<P><STRONG><a name="[72]"></a>DMA_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32f0xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Init
</UL>

<P><STRONG><a name="[59]"></a>Delay_ms</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.Delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
</UL>

<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = EXTI0_1_IRQHandler &rArr; a7139_recv_handle &rArr; A7139_GetRSSI &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_RX_Exti
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Exti_Init
</UL>

<P><STRONG><a name="[4e]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f0xx_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[38]"></a>EXTI_Init</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, stm32f0xx_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Exti_Init
</UL>

<P><STRONG><a name="[2f]"></a>Err_State</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, a7139.o(i.Err_State))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteID
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Config
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Cal
</UL>

<P><STRONG><a name="[50]"></a>Feed_IWDG</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, main.o(i.Feed_IWDG))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Feed_IWDG
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>GIO2_wait</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, a7139_api.o(i.GIO2_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GIO2_wait &rArr; A7139_IO_Read_Bit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_Read_Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_SetChn
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Send_Msg
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
</UL>

<P><STRONG><a name="[5e]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_GPIO_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSDIO_Output
</UL>

<P><STRONG><a name="[6a]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, stm32f0xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
</UL>

<P><STRONG><a name="[3f]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_Read_Bit
</UL>

<P><STRONG><a name="[3d]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
</UL>

<P><STRONG><a name="[41]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>IWDG_Enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[52]"></a>IWDG_Init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, main.o(i.IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feed_IWDG
</UL>

<P><STRONG><a name="[54]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[55]"></a>IWDG_SetReload</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_SetReload))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[53]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_iwdg.o(i.IWDG_WriteAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
</UL>

<P><STRONG><a name="[57]"></a>InitRF</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, a7139_api.o(i.InitRF))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = InitRF &rArr; A7139_Cal &rArr; A7139_ReadPageA &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO2_wait
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_GPIO_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCMD
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_WriteID
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Exti_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Config
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Cal
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>Model_Config</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, app_msg.o(i.Model_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Model_Config &rArr; A7139_SetChn &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_rf_cmd_to_master
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_SetChn
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, stm32f0xx_misc.o(i.NVIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_RX_Exti
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Exti_Init
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_GPIO_Init
</UL>

<P><STRONG><a name="[69]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
</UL>

<P><STRONG><a name="[35]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Exti_Init
</UL>

<P><STRONG><a name="[5c]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, stm32f0xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f0xx_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Exti_Init
</UL>

<P><STRONG><a name="[42]"></a>SetSDIO_Output</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, a7139.o(i.SetSDIO_Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteRead
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_ReadReg
</UL>

<P><STRONG><a name="[44]"></a>StrobeCMD</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, a7139.o(i.StrobeCMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = StrobeCMD &rArr; A7139_IO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_SetChn
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Send_Msg
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_fillFifo
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; SysTime_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTime_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SysTick_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main.o(i.SysTick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SysTick_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>SysTime_handle</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, main.o(i.SysTime_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTime_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_buffer_clean
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[24]"></a>SystemInit</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, system_stm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>USART2_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bsp_usart2.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f0xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>USART2_Init</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, bsp_usart2.o(i.USART2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = USART2_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>USART2_Send</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bsp_usart2.o(i.USART2_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_rf_cmd_to_master
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f0xx_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[6c]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
</UL>

<P><STRONG><a name="[74]"></a>USART_DMACmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMA_Init
</UL>

<P><STRONG><a name="[6d]"></a>USART_DMA_Init</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, bsp_usart2.o(i.USART_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USART_DMA_Init &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
</UL>

<P><STRONG><a name="[70]"></a>USART_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Send
</UL>

<P><STRONG><a name="[64]"></a>USART_GetITStatus</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32f0xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[6b]"></a>USART_Init</STRONG> (Thumb, 230 bytes, Stack size 56 bytes, stm32f0xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
</UL>

<P><STRONG><a name="[65]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f0xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Send
</UL>

<P><STRONG><a name="[8c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[58]"></a>a7139_GPIO_Init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, a7139.o(i.a7139_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = a7139_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
</UL>

<P><STRONG><a name="[4f]"></a>a7139_recv_handle</STRONG> (Thumb, 142 bytes, Stack size 96 bytes, a7139_api.o(i.a7139_recv_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = a7139_recv_handle &rArr; A7139_GetRSSI &rArr; A7139_ReadReg &rArr; SetSDIO_Output &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_crc16
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_data_into_buffer
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GIO2_wait
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_GetRSSI
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCMD
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteRead
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>cal_crc16</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, crc16.o(i.cal_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cal_crc16 &rArr; crc_step
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_step
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
</UL>

<P><STRONG><a name="[7a]"></a>crc_finish</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, crc16.o(i.crc_finish))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_crc16
</UL>

<P><STRONG><a name="[79]"></a>crc_step</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, crc16.o(i.crc_step))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crc_step
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_crc16
</UL>

<P><STRONG><a name="[7b]"></a>data_into_buffer</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app_msg.o(i.data_into_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = data_into_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_data
</UL>

<P><STRONG><a name="[7e]"></a>get_usart_buffer_ops</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_msg.o(i.get_usart_buffer_ops))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>handler_data</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, bsp_usart2.o(i.handler_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = handler_data &rArr; data_into_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_into_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_IRQHandler
</UL>

<P><STRONG><a name="[23]"></a>main</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = main &rArr; USART2_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_get_usart_buffer_ops
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_usart_buffer_ops
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Send
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model_Config
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRF
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_SetChn
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Send_Msg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_RX_Exti
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feed_IWDG
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[78]"></a>rf_data_into_buffer</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app_msg.o(i.rf_data_into_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_data_into_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;a7139_recv_handle
</UL>

<P><STRONG><a name="[7d]"></a>rf_get_usart_buffer_ops</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, app_msg.o(i.rf_get_usart_buffer_ops))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>uart_buffer_clean</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_msg.o(i.uart_buffer_clean))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTime_handle
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[63]"></a>SetSysClock</STRONG> (Thumb, 202 bytes, Stack size 12 bytes, system_stm32f0xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[61]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
</UL>

<P><STRONG><a name="[5b]"></a>send_rf_cmd_to_master</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, app_msg.o(i.send_rf_cmd_to_master))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = send_rf_cmd_to_master &rArr; USART2_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_Send
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model_Config
</UL>

<P><STRONG><a name="[46]"></a>A7139_fillFifo</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, a7139_api.o(i.A7139_fillFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = A7139_fillFifo &rArr; StrobeCMD &rArr; A7139_IO_SetBit
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrobeCMD
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ByteSend
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_SetBit
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_IO_ReSetBit
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;A7139_Send_Msg
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
